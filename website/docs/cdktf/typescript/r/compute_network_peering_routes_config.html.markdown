---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  Manage a network peering's route settings without managing the peering as
  a whole.
---

# google\_compute\_network\_peering\_routes\_config

Manage a network peering's route settings without managing the peering as
a whole. This resource is primarily intended for use with GCP-generated
peerings that shouldn't otherwise be managed by other tools. Deleting this
resource is a no-op and the peering will not be modified.


To get more information about NetworkPeeringRoutesConfig, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/networks/updatePeering)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/vpc/docs/vpc-peering)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_peering_routes_config_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Peering Routes Config Basic


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleComputeNetworkNetworkPrimary =
      new google.computeNetwork.ComputeNetwork(this, "network_primary", {
        autoCreateSubnetworks: cdktf.Token.asBoolean("false"),
        name: "primary-network",
      });
    const googleComputeNetworkNetworkSecondary =
      new google.computeNetwork.ComputeNetwork(this, "network_secondary", {
        autoCreateSubnetworks: cdktf.Token.asBoolean("false"),
        name: "secondary-network",
      });
    const googleComputeNetworkPeeringPeeringPrimary =
      new google.computeNetworkPeering.ComputeNetworkPeering(
        this,
        "peering_primary",
        {
          exportCustomRoutes: true,
          importCustomRoutes: true,
          name: "primary-peering",
          network: cdktf.Token.asString(googleComputeNetworkNetworkPrimary.id),
          peerNetwork: cdktf.Token.asString(
            googleComputeNetworkNetworkSecondary.id
          ),
        }
      );
    new google.computeNetworkPeering.ComputeNetworkPeering(
      this,
      "peering_secondary",
      {
        name: "secondary-peering",
        network: cdktf.Token.asString(googleComputeNetworkNetworkSecondary.id),
        peerNetwork: cdktf.Token.asString(
          googleComputeNetworkNetworkPrimary.id
        ),
      }
    );
    new google.computeNetworkPeeringRoutesConfig.ComputeNetworkPeeringRoutesConfig(
      this,
      "peering_primary_routes",
      {
        exportCustomRoutes: true,
        importCustomRoutes: true,
        network: cdktf.Token.asString(googleComputeNetworkNetworkPrimary.name),
        peering: cdktf.Token.asString(
          googleComputeNetworkPeeringPeeringPrimary.name
        ),
      }
    );
  }
}

```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_peering_routes_config_gke&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Peering Routes Config Gke


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleComputeNetworkContainerNetwork =
      new google.computeNetwork.ComputeNetwork(this, "container_network", {
        autoCreateSubnetworks: false,
        name: "container-network",
      });
    const googleComputeSubnetworkContainerSubnetwork =
      new google.computeSubnetwork.ComputeSubnetwork(
        this,
        "container_subnetwork",
        {
          ipCidrRange: "10.0.36.0/24",
          name: "container-subnetwork",
          network: cdktf.Token.asString(
            googleComputeNetworkContainerNetwork.name
          ),
          privateIpGoogleAccess: true,
          region: "us-central1",
          secondaryIpRange: [
            {
              ipCidrRange: "10.0.0.0/19",
              rangeName: "pod",
            },
            {
              ipCidrRange: "10.0.32.0/22",
              rangeName: "svc",
            },
          ],
        }
      );
    const googleContainerClusterPrivateCluster =
      new google.containerCluster.ContainerCluster(this, "private_cluster", {
        initialNodeCount: 1,
        ipAllocationPolicy: {
          clusterSecondaryRangeName: cdktf.Token.asString(
            cdktf.propertyAccess(
              googleComputeSubnetworkContainerSubnetwork.secondaryIpRange,
              ["0", "range_name"]
            )
          ),
          servicesSecondaryRangeName: cdktf.Token.asString(
            cdktf.propertyAccess(
              googleComputeSubnetworkContainerSubnetwork.secondaryIpRange,
              ["1", "range_name"]
            )
          ),
        },
        location: "us-central1-a",
        masterAuthorizedNetworksConfig: {},
        name: "private-cluster",
        network: cdktf.Token.asString(
          googleComputeNetworkContainerNetwork.name
        ),
        privateClusterConfig: {
          enablePrivateEndpoint: true,
          enablePrivateNodes: true,
          masterIpv4CidrBlock: "10.42.0.0/28",
        },
        subnetwork: cdktf.Token.asString(
          googleComputeSubnetworkContainerSubnetwork.name
        ),
      });
    new google.computeNetworkPeeringRoutesConfig.ComputeNetworkPeeringRoutesConfig(
      this,
      "peering_gke_routes",
      {
        exportCustomRoutes: true,
        importCustomRoutes: true,
        network: cdktf.Token.asString(
          googleComputeNetworkContainerNetwork.name
        ),
        peering: cdktf.Token.asString(
          cdktf.propertyAccess(
            googleContainerClusterPrivateCluster.privateClusterConfig,
            ["0", "peering_name"]
          )
        ),
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:


* `peering` -
  (Required)
  Name of the peering.

* `exportCustomRoutes` -
  (Required)
  Whether to export the custom routes to the peer network.

* `importCustomRoutes` -
  (Required)
  Whether to import the custom routes to the peer network.

* `network` -
  (Required)
  The name of the primary network for the peering.


- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


NetworkPeeringRoutesConfig can be imported using any of these accepted formats:

```
$ terraform import google_compute_network_peering_routes_config.default projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}
$ terraform import google_compute_network_peering_routes_config.default {{project}}/{{network}}/{{peering}}
$ terraform import google_compute_network_peering_routes_config.default {{network}}/{{peering}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-1b8ca3eed4ffe09acff602126e5f4b5345b8a5095be1159a5bf274bc2feb7b83 -->