---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  Manage a network peering's route settings without managing the peering as
  a whole.
---

# google\_compute\_network\_peering\_routes\_config

Manage a network peering's route settings without managing the peering as
a whole. This resource is primarily intended for use with GCP-generated
peerings that shouldn't otherwise be managed by other tools. Deleting this
resource is a no-op and the peering will not be modified.


To get more information about NetworkPeeringRoutesConfig, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/networks/updatePeering)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/vpc/docs/vpc-peering)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_peering_routes_config_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Peering Routes Config Basic


```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        google_compute_network_network_primary =
        google.compute_network.ComputeNetwork(self, "network_primary",
            auto_create_subnetworks=cdktf.Token.as_boolean("false"),
            name="primary-network"
        )
        google_compute_network_network_secondary =
        google.compute_network.ComputeNetwork(self, "network_secondary",
            auto_create_subnetworks=cdktf.Token.as_boolean("false"),
            name="secondary-network"
        )
        google_compute_network_peering_peering_primary =
        google.compute_network_peering.ComputeNetworkPeering(self, "peering_primary",
            export_custom_routes=True,
            import_custom_routes=True,
            name="primary-peering",
            network=cdktf.Token.as_string(google_compute_network_network_primary.id),
            peer_network=cdktf.Token.as_string(google_compute_network_network_secondary.id)
        )
        google.compute_network_peering.ComputeNetworkPeering(self, "peering_secondary",
            name="secondary-peering",
            network=cdktf.Token.as_string(google_compute_network_network_secondary.id),
            peer_network=cdktf.Token.as_string(google_compute_network_network_primary.id)
        )
        google.compute_network_peering_routes_config.ComputeNetworkPeeringRoutesConfig(self, "peering_primary_routes",
            export_custom_routes=True,
            import_custom_routes=True,
            network=cdktf.Token.as_string(google_compute_network_network_primary.name),
            peering=cdktf.Token.as_string(google_compute_network_peering_peering_primary.name)
        )
```
<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_peering_routes_config_gke&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Network Peering Routes Config Gke


```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        google_compute_network_container_network =
        google.compute_network.ComputeNetwork(self, "container_network",
            auto_create_subnetworks=False,
            name="container-network"
        )
        google_compute_subnetwork_container_subnetwork =
        google.compute_subnetwork.ComputeSubnetwork(self, "container_subnetwork",
            ip_cidr_range="10.0.36.0/24",
            name="container-subnetwork",
            network=cdktf.Token.as_string(google_compute_network_container_network.name),
            private_ip_google_access=True,
            region="us-central1",
            secondary_ip_range=[ComputeSubnetworkSecondaryIpRange(
                ip_cidr_range="10.0.0.0/19",
                range_name="pod"
            ), ComputeSubnetworkSecondaryIpRange(
                ip_cidr_range="10.0.32.0/22",
                range_name="svc"
            )
            ]
        )
        google_container_cluster_private_cluster =
        google.container_cluster.ContainerCluster(self, "private_cluster",
            initial_node_count=1,
            ip_allocation_policy=ContainerClusterIpAllocationPolicy(
                cluster_secondary_range_name=cdktf.Token.as_string(
                    cdktf.property_access(google_compute_subnetwork_container_subnetwork.secondary_ip_range, ["0", "range_name"])),
                services_secondary_range_name=cdktf.Token.as_string(
                    cdktf.property_access(google_compute_subnetwork_container_subnetwork.secondary_ip_range, ["1", "range_name"]))
            ),
            location="us-central1-a",
            master_authorized_networks_config=ContainerClusterMasterAuthorizedNetworksConfig(),
            name="private-cluster",
            network=cdktf.Token.as_string(google_compute_network_container_network.name),
            private_cluster_config=ContainerClusterPrivateClusterConfig(
                enable_private_endpoint=True,
                enable_private_nodes=True,
                master_ipv4_cidr_block="10.42.0.0/28"
            ),
            subnetwork=cdktf.Token.as_string(google_compute_subnetwork_container_subnetwork.name)
        )
        google.compute_network_peering_routes_config.ComputeNetworkPeeringRoutesConfig(self, "peering_gke_routes",
            export_custom_routes=True,
            import_custom_routes=True,
            network=cdktf.Token.as_string(google_compute_network_container_network.name),
            peering=cdktf.Token.as_string(
                cdktf.property_access(google_container_cluster_private_cluster.private_cluster_config, ["0", "peering_name"]))
        )
```

## Argument Reference

The following arguments are supported:


* `peering` -
  (Required)
  Name of the peering.

* `export_custom_routes` -
  (Required)
  Whether to export the custom routes to the peer network.

* `import_custom_routes` -
  (Required)
  Whether to import the custom routes to the peer network.

* `network` -
  (Required)
  The name of the primary network for the peering.


- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


NetworkPeeringRoutesConfig can be imported using any of these accepted formats:

```
$ terraform import google_compute_network_peering_routes_config.default projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}
$ terraform import google_compute_network_peering_routes_config.default {{project}}/{{network}}/{{peering}}
$ terraform import google_compute_network_peering_routes_config.default {{network}}/{{peering}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-1b8ca3eed4ffe09acff602126e5f4b5345b8a5095be1159a5bf274bc2feb7b83 -->