---
subcategory: "Cloud Storage"
description: |-
  Creates a new object ACL in Google Cloud Storage.
---


<!-- Please do not edit this file, it is generated. -->
# google\_storage\_object\_acl

Authoritatively manages the access control list (ACL) for an object in a Google
Cloud Storage (GCS) bucket. Removing a `google_storage_object_acl` sets the
acl to the `private` [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl).

For more information see
[the official documentation](https://cloud.google.com/storage/docs/access-control/lists) 
and 
[API](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls).

-> Want fine-grained control over object ACLs? Use `google_storage_object_access_control` to control individual
role entity pairs.

## Example Usage

Create an object ACL with one owner and one reader.

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        google_storage_bucket_image_store =
        google.storage_bucket.StorageBucket(self, "image-store",
            location="EU",
            name="image-store-bucket"
        )
        google_storage_bucket_object_image =
        google.storage_bucket_object.StorageBucketObject(self, "image",
            bucket=cdktf.Token.as_string(google_storage_bucket_image_store.name),
            name="image1",
            source="image1.jpg"
        )
        google.storage_object_acl.StorageObjectAcl(self, "image-store-acl",
            bucket=cdktf.Token.as_string(google_storage_bucket_image_store.name),
            object=cdktf.Token.as_string(google_storage_bucket_object_image.output_name),
            role_entity=["OWNER:user-my.email@gmail.com", "READER:group-mygroup"]
        )
```

## Argument Reference

* `bucket` - (Required) The name of the bucket the object is stored in.

* `object` - (Required) The name of the object to apply the acl to.

- - -

* `predefined_acl` - (Optional) The "canned" [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl) to apply. Must be set if `role_entity` is not.

* `role_entity` - (Optional) List of role/entity pairs in the form `ROLE:entity`. See [GCS Object ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls) for more details.
Must be set if `predefined_acl` is not.

-> The object's creator will always have `OWNER` permissions for their object, and any attempt to modify that permission would return an error. Instead, Terraform automatically
adds that role/entity pair to your `terraform plan` results when it is omitted in your config; `terraform plan` will show the correct final state at every point except for at
`Create` time, where the object role/entity pair is omitted if not explicitly set.


## Attributes Reference

Only the arguments listed above are exposed as attributes.

## Import

This resource does not support import.

<!-- cache-key: cdktf-0.17.0-pre.15 input-9bc6048a1f0bd31688b7484dbf93363a16c44c24efbbd6c651eef34db945783b -->