---
subcategory: "Container Registry"
description: |-
  Get URLs for a given project's container registry repository.
---


<!-- Please do not edit this file, it is generated. -->
# google\_container\_registry\_repository

This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.

The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataGoogleContainerRegistryRepositoryFoo =
      new google.dataGoogleContainerRegistryRepository.DataGoogleContainerRegistryRepository(
        this,
        "foo",
        {}
      );
    new cdktf.TerraformOutput(this, "gcr_location", {
      value: dataGoogleContainerRegistryRepositoryFoo.repositoryUrl,
    });
  }
}

```

## Argument Reference
* `project`: (Optional) The project ID that this repository is attached to.  If not provided, provider project will be used instead.
* `region`: (Optional) The GCR region to use.  As of this writing, one of `asia`, `eu`, and `us`.  See [the documentation](https://cloud.google.com/container-registry/docs/pushing-and-pulling) for additional information.

## Attributes Reference
In addition to the arguments listed above, this data source exports:

* `repositoryUrl`: The URL at which the repository can be accessed.

<!-- cache-key: cdktf-0.17.0-pre.15 input-f3a131507c6d6ca8af877a64e20a9c70ccc9aea12dad279d6818203d3b6373ed -->