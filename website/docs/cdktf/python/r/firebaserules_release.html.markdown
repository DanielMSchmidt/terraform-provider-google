---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: DCL     ***
#
# ----------------------------------------------------------------------------
#
#     This file is managed by Magic Modules (https:#github.com/GoogleCloudPlatform/magic-modules)
#     and is based on the DCL (https:#github.com/GoogleCloudPlatform/declarative-resource-client-library).
#     Changes will need to be made to the DCL or Magic Modules instead of here.
#
#     We are not currently able to accept contributions to this file. If changes
#     are required, please file an issue at https:#github.com/hashicorp/terraform-provider-google/issues/new/choose
#
# ----------------------------------------------------------------------------
subcategory: "Firebaserules"
description: |-
  
---

# google_firebaserules_release



For more information, see:
* [Get started with Firebase Security Rules](https://firebase.google.com/docs/rules/get-started)
## Example Usage - firestore_release
Creates a Firebase Rules Release to Cloud Firestore
```hcl
resource "google_firebaserules_release" "primary" {
  name         = "cloud.firestore"
  ruleset_name = "projects/my-project-name/rulesets/${google_firebaserules_ruleset.firestore.name}"
  project      = "my-project-name"

  lifecycle {
    replace_triggered_by = [
      google_firebaserules_ruleset.firestore
    ]
  }
}

resource "google_firebaserules_ruleset" "firestore" {
  source {
    files {
      content = "service cloud.firestore {match /databases/{database}/documents { match /{document=**} { allow read, write: if false; } } }"
      name    = "firestore.rules"
    }
  }

  project = "my-project-name"
}

```
## Example Usage - storage_release
Creates a Firebase Rules Release for a Storage bucket
```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        google_storage_bucket_bucket = google.storage_bucket.StorageBucket(self, "bucket",
            location="us-west1",
            name="bucket",
            project="my-project-name",
            provider=google_beta
        )
        google_firebase_storage_bucket_bucket = google.FirebaseStorageBucket(self, "bucket_1",
            bucket_id=google_storage_bucket_bucket.name,
            project="my-project-name",
            provider=google_beta
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        google_firebase_storage_bucket_bucket.override_logical_id("bucket")
        google_firebaserules_ruleset_storage = google.FirebaserulesRuleset(self, "storage",
            depends_on=[google_firebase_storage_bucket_bucket],
            project="my-project-name",
            provider=google_beta,
            source=[{
                "files": [{
                    "content": "service firebase.storage {match /b/{bucket}/o {match /{allPaths=**} {allow read, write: if request.auth != null;}}}",
                    "name": "storage.rules"
                }
                ]
            }
            ]
        )
        google.FirebaserulesRelease(self, "primary",
            lifecycle={
                "replace_triggered_by": [google_firebaserules_ruleset_storage]
            },
            name="firebase.storage/${" + google_storage_bucket_bucket.name + "}",
            project="my-project-name",
            provider=google_beta,
            ruleset_name="projects/my-project-name/rulesets/${" + google_firebaserules_ruleset_storage.name + "}"
        )
```

## Argument Reference

The following arguments are supported:

* `name` -
  (Required)
  Format: `projects/{project_id}/releases/{release_id}`\Firestore Rules Releases will **always** have the name 'cloud.firestore'
  
* `ruleset_name` -
  (Required)
  Name of the `Ruleset` referred to by this `Release`. The `Ruleset` must exist for the `Release` to be created.
  


- - -

* `project` -
  (Optional)
  The project for the resource
  


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/releases/{{name}}`

* `create_time` -
  Output only. Time the release was created.
  
* `disabled` -
  Disable the release to keep it from being served. The response code of NOT_FOUND will be given for executables generated from this Release.
  
* `update_time` -
  Output only. Time the release was updated.
  
## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import

Release can be imported using any of these accepted formats:

```
$ terraform import google_firebaserules_release.default projects/{{project}}/releases/{{name}}
```




<!-- cache-key: cdktf-0.17.0-pre.15 input-b8da7f06e73bd7fb7f4837784b27f6147ab1f34d03f916fe78507cda6bfd1320 -->