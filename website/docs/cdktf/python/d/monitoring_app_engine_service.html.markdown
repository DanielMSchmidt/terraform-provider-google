---
subcategory: "Cloud (Stackdriver) Monitoring"
description: |-
  An Monitoring Service resource created automatically by GCP to monitor an
  App Engine service.
---


<!-- Please do not edit this file, it is generated. -->
# google\_monitoring\_app\_engine\_service

A Monitoring Service is the root resource under which operational aspects of a
generic service are accessible. A service is some discrete, autonomous, and
network-accessible unit, designed to solve an individual concern

An App Engine monitoring service is automatically created by GCP to monitor
App Engine services.


To get more information about Service, see:

* [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
* How-to Guides
    * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
    * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)

## Example Usage - Monitoring App Engine Service


```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        google_storage_bucket_bucket = google.storage_bucket.StorageBucket(self, "bucket",
            location="US",
            name="appengine-static-content"
        )
        google_storage_bucket_object_object =
        google.storage_bucket_object.StorageBucketObject(self, "object",
            bucket=cdktf.Token.as_string(google_storage_bucket_bucket.name),
            name="hello-world.zip",
            source="./test-fixtures/appengine/hello-world.zip"
        )
        google_app_engine_standard_app_version_myapp =
        google.app_engine_standard_app_version.AppEngineStandardAppVersion(self, "myapp",
            delete_service_on_destroy=False,
            deployment=AppEngineStandardAppVersionDeployment(
                zip=AppEngineStandardAppVersionDeploymentZip(
                    source_url="https://storage.googleapis.com/${" + google_storage_bucket_bucket.name + "}/${" + google_storage_bucket_object_object.name + "}"
                )
            ),
            entrypoint=AppEngineStandardAppVersionEntrypoint(
                shell="node ./app.js"
            ),
            env_variables={
                "port": "8080"
            },
            runtime="nodejs10",
            service="myapp",
            version_id="v1"
        )
        google.data_google_monitoring_app_engine_service.DataGoogleMonitoringAppEngineService(self, "srv",
            module_id=cdktf.Token.as_string(google_app_engine_standard_app_version_myapp.service)
        )
```

## Argument Reference

The arguments of this data source act as filters for identifying a given App Engine-created service.

The given filters must match exactly one service whose data will be exported as attributes. The following arguments are supported:

One of the following fields must be specified:

* `module_id` - (Required) The ID of the App Engine module underlying this
  service. Corresponds to the moduleId resource label in the [gae_app](https://cloud.google.com/monitoring/api/resources#tag_gae_app) monitored resource, or the service/module name.

- - -

Other optional fields include:

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `name` -
  The full REST resource name for this channel. The syntax is:
  `projects/[PROJECT_ID]/services/[SERVICE_ID]`.

* `display_name` -
  Name used for UI elements listing this (Monitoring) Service.

* `telemetry` -
  Configuration for how to query telemetry on the Service. Structure is documented below.

The `telemetry` block includes:

* `resource_name` -
  (Optional)
  The full name of the resource that defines this service.
  Formatted as described in
  https://cloud.google.com/apis/design/resource_names.
<!-- cache-key: cdktf-0.17.0-pre.15 input-5a2249c89cb566f7fb7af1e4cd872c11a61860fc2a0dc1f62fefc799d98c969a -->