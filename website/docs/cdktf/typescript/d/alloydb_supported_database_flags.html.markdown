---
subcategory: "Alloydb"
description: |-
  Fetches the list of supported alloydb database flags in a location.
---


<!-- Please do not edit this file, it is generated. -->
# google\_alloydb\_supported\_database\_flags

Use this data source to get information about the supported alloydb database flags in a location.

## Example Usage


```hcl
data "google_alloydb_supported_database_flags" "qa" {
    location = "us-central1"
}
```

## Argument Reference

The following arguments are supported:

* `location` - (required) The canonical id of the location. For example: `usEast1`.

* `project` - (optional) The ID of the project.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `supportedDatabaseFlags` - Contains a list of `flag`, which contains the details about a particular flag.

A `flag` object would contain the following fields:-

* `name` - The name of the flag resource, following Google Cloud conventions, e.g.: * projects/{project}/locations/{location}/flags/{flag} This field currently has no semantic meaning.

* `flagName` - The name of the database flag, e.g. "max_allowed_packets". The is a possibly key for the Instance.database_flags map field.

* `valueType` - ValueType describes the semantic type of the value that the flag accepts. Regardless of the ValueType, the Instance.database_flags field accepts the stringified version of the value, i.e. "20" or "3.14". The supported values are `valueTypeUnspecified`, `string`, `integer`, `float` and `none`.

* `acceptsMultipleValues` - Whether the database flag accepts multiple values. If true, a comma-separated list of stringified values may be specified.

* `supportedDbVersions` - Major database engine versions for which this flag is supported. The supported values are `postgres14` and `databaseVersionUnspecified`.

* `requiresDbRestart` - Whether setting or updating this flag on an Instance requires a database restart. If a flag that requires database restart is set, the backend will automatically restart the database (making sure to satisfy any availability SLO's).

* `stringRestrictions` - Restriction on `string` type value. The list of allowed values, if bounded. This field will be empty if there is a unbounded number of allowed values.

* `integerRestrictions` - Restriction on `integer` type value. Specifies the minimum value and the maximum value that can be specified, if applicable.

-> **Note** `stringRestrictions` and `integerRestrictions` are part of the union field `restrictions`. The restrictions on the flag value per type. `restrictions` can be either `stringRestrictions` or `integerRestrictions` but not both.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d5407b5550e7aa65ba457979a73fb50378eb257d60ff22aa2f51d8703a9d1ffd -->