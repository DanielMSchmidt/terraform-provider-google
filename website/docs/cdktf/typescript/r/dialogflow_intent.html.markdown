---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Dialogflow"
description: |-
  Represents a Dialogflow intent.
---

# google\_dialogflow\_intent

Represents a Dialogflow intent. Intents convert a number of user expressions or patterns into an action. An action
is an extraction of a user command or sentence semantics.


To get more information about Intent, see:

* [API documentation](https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects.agent.intents)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/dialogflow/docs/)

## Example Usage - Dialogflow Intent Basic


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleDialogflowAgentBasicAgent =
      new google.dialogflowAgent.DialogflowAgent(this, "basic_agent", {
        defaultLanguageCode: "en",
        displayName: "example_agent",
        timeZone: "America/New_York",
      });
    new google.dialogflowIntent.DialogflowIntent(this, "basic_intent", {
      dependsOn: [googleDialogflowAgentBasicAgent],
      displayName: "basic-intent",
    });
  }
}

```
## Example Usage - Dialogflow Intent Full


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleProjectAgentProject = new google.project.Project(
      this,
      "agent_project",
      {
        name: "my-project",
        orgId: "123456789",
        projectId: "my-project",
      }
    );
    const googleProjectServiceAgentProject =
      new google.projectService.ProjectService(this, "agent_project_1", {
        disableDependentServices: false,
        project: cdktf.Token.asString(googleProjectAgentProject.projectId),
        service: "dialogflow.googleapis.com",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    googleProjectServiceAgentProject.overrideLogicalId("agent_project");
    const googleServiceAccountDialogflowServiceAccount =
      new google.serviceAccount.ServiceAccount(
        this,
        "dialogflow_service_account",
        {
          accountId: "my-account",
        }
      );
    const googleDialogflowAgentBasicAgent =
      new google.dialogflowAgent.DialogflowAgent(this, "basic_agent", {
        defaultLanguageCode: "en",
        displayName: "example_agent",
        project: cdktf.Token.asString(googleProjectAgentProject.projectId),
        timeZone: "America/New_York",
      });
    new google.dialogflowIntent.DialogflowIntent(this, "full_intent", {
      action: "some_action",
      defaultResponsePlatforms: ["FACEBOOK", "SLACK"],
      dependsOn: [googleDialogflowAgentBasicAgent],
      displayName: "full-intent",
      events: ["some_event"],
      inputContextNames: [
        "projects/${" +
          googleProjectAgentProject.projectId +
          "}/agent/sessions/-/contexts/some_id",
      ],
      isFallback: false,
      mlDisabled: true,
      priority: 1,
      project: cdktf.Token.asString(googleProjectAgentProject.projectId),
      resetContexts: true,
      webhookState: "WEBHOOK_STATE_ENABLED",
    });
    new google.projectIamMember.ProjectIamMember(this, "agent_create", {
      member:
        "serviceAccount:${" +
        googleServiceAccountDialogflowServiceAccount.email +
        "}",
      project: cdktf.Token.asString(googleProjectServiceAgentProject.project),
      role: "roles/dialogflow.admin",
    });
  }
}

```

## Argument Reference

The following arguments are supported:


* `displayName` -
  (Required)
  The name of this intent to be displayed on the console.


- - -


* `webhookState` -
  (Optional)
  Indicates whether webhooks are enabled for the intent.
  * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in the intent.
  * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
  filling prompt is forwarded to the webhook.
  Possible values are: `webhookStateEnabled`, `webhookStateEnabledForSlotFilling`.

* `priority` -
  (Optional)
  The priority of this intent. Higher numbers represent higher priorities.
    - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
    to the Normal priority in the console.
    - If the supplied value is negative, the intent is ignored in runtime detect intent requests.

* `isFallback` -
  (Optional)
  Indicates whether this is a fallback intent.

* `mlDisabled` -
  (Optional)
  Indicates whether Machine Learning is disabled for the intent.
  Note: If mlDisabled setting is set to true, then this intent is not taken into account during inference in ML
  ONLY match mode. Also, auto-markup in the UI is turned off.

* `inputContextNames` -
  (Optional)
  The list of context names required for this intent to be triggered.
  Format: projects/<Project ID>/agent/sessions/-/contexts/<Context ID>.

* `events` -
  (Optional)
  The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of
  the contexts must be present in the active user session for an event to trigger this intent. See the
  [events reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.

* `action` -
  (Optional)
  The name of the action associated with the intent.
  Note: The action name must not contain whitespaces.

* `resetContexts` -
  (Optional)
  Indicates whether to delete all contexts in the current session when this intent is matched.

* `defaultResponsePlatforms` -
  (Optional)
  The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED
  (i.e. default platform).
  Each value may be one of: `facebook`, `slack`, `telegram`, `kik`, `skype`, `line`, `viber`, `actionsOnGoogle`, `googleHangouts`.

* `parentFollowupIntentName` -
  (Optional)
  The unique identifier of the parent intent in the chain of followup intents.
  Format: projects/<Project ID>/agent/intents/<Intent ID>.

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{name}}`

* `name` -
  The unique identifier of this intent.
  Format: projects/<Project ID>/agent/intents/<Intent ID>.

* `rootFollowupIntentName` -
  The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup
  intents chain for this intent.
  Format: projects/<Project ID>/agent/intents/<Intent ID>.

* `followupIntentInfo` -
  Information about all followup intents that have this intent as a direct or indirect parent. We populate this field
  only in the output.
  Structure is [documented below](#nested_followup_intent_info).


<a name="nested_followup_intent_info"></a>The `followupIntentInfo` block contains:

* `followupIntentName` -
  (Optional)
  The unique identifier of the followup intent.
  Format: projects/<Project ID>/agent/intents/<Intent ID>.

* `parentFollowupIntentName` -
  (Optional)
  The unique identifier of the followup intent's parent.
  Format: projects/<Project ID>/agent/intents/<Intent ID>.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


Intent can be imported using any of these accepted formats:

```
$ terraform import google_dialogflow_intent.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-bc3d87e9f379eeeca2f78817f254e3ccbd13f200f48d2424b49861773dd5b635 -->