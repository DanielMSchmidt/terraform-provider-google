---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  A key for signing Cloud CDN signed URLs for Backend Services.
---

# google\_compute\_backend\_service\_signed\_url\_key

A key for signing Cloud CDN signed URLs for Backend Services.


To get more information about BackendServiceSignedUrlKey, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices)
* How-to Guides
    * [Using Signed URLs](https://cloud.google.com/cdn/docs/using-signed-urls/)

~> **Warning:** All arguments including the following potentially sensitive
values will be stored in the raw state as plain text: `key_value`.
[Read more about sensitive data in state](https://www.terraform.io/language/state/sensitive-data).

## Example Usage - Backend Service Signed Url Key


```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
import ...gen.providers.random as random
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # The following providers are missing schema information and might need manual adjustments to synthesize correctly: random.
        #     For a more precise conversion please use the --provider flag in convert.
        google_compute_http_health_check_default =
        google.compute_http_health_check.ComputeHttpHealthCheck(self, "default",
            check_interval_sec=1,
            name="test",
            request_path="/",
            timeout_sec=1
        )
        google_compute_instance_template_webserver =
        google.compute_instance_template.ComputeInstanceTemplate(self, "webserver",
            disk=[ComputeInstanceTemplateDisk(
                auto_delete=True,
                boot=True,
                source_image="debian-cloud/debian-11"
            )
            ],
            machine_type="e2-medium",
            name="standard-webserver",
            network_interface=[ComputeInstanceTemplateNetworkInterface(
                network="default"
            )
            ]
        )
        random_id_url_signature = random.id.Id(self, "url_signature",
            byte_length=16
        )
        google_compute_instance_group_manager_webservers =
        google.compute_instance_group_manager.ComputeInstanceGroupManager(self, "webservers",
            base_instance_name="webserver",
            name="my-webservers",
            target_size=1,
            version=[ComputeInstanceGroupManagerVersion(
                instance_template=cdktf.Token.as_string(google_compute_instance_template_webserver.id),
                name="primary"
            )
            ],
            zone="us-central1-f"
        )
        google_compute_backend_service_example_backend =
        google.compute_backend_service.ComputeBackendService(self, "example_backend",
            backend=[ComputeBackendServiceBackend(
                group=cdktf.Token.as_string(google_compute_instance_group_manager_webservers.instance_group)
            )
            ],
            description="Our company website",
            enable_cdn=True,
            health_checks=[
                cdktf.Token.as_string(google_compute_http_health_check_default.id)
            ],
            name="my-backend-service",
            port_name="http",
            protocol="HTTP",
            timeout_sec=10
        )
        google.compute_backend_service_signed_url_key.ComputeBackendServiceSignedUrlKey(self, "backend_key",
            backend_service=cdktf.Token.as_string(google_compute_backend_service_example_backend.name),
            key_value=cdktf.Token.as_string(random_id_url_signature.b64_url),
            name="test-key"
        )
```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the signed URL key.

* `key_value` -
  (Required)
  128-bit key value used for signing the URL. The key value must be a
  valid RFC 4648 Section 5 base64url encoded string.
  **Note**: This property is sensitive and will not be displayed in the plan.

* `backend_service` -
  (Required)
  The backend service this signed URL key belongs.


- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/global/backendServices/{{backend_service}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import

This resource does not support import.

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-003753d1676e68519130450e32940bf3c62c2d8baa320646245547ecf7a39733 -->