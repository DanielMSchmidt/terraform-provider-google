---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud DNS"
description: |-
  A Response Policy is a collection of selectors that apply to queries
  made against one or more Virtual Private Cloud networks.
---

# google\_dns\_response\_policy

A Response Policy is a collection of selectors that apply to queries
made against one or more Virtual Private Cloud networks.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dns_response_policy_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dns Response Policy Basic


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleComputeNetworkNetwork1 =
      new google.computeNetwork.ComputeNetwork(this, "network-1", {
        autoCreateSubnetworks: false,
        name: "network-1",
        provider: googleBeta,
      });
    const googleComputeNetworkNetwork2 =
      new google.computeNetwork.ComputeNetwork(this, "network-2", {
        autoCreateSubnetworks: false,
        name: "network-2",
        provider: googleBeta,
      });
    const googleComputeSubnetworkSubnetwork1 =
      new google.computeSubnetwork.ComputeSubnetwork(this, "subnetwork-1", {
        ipCidrRange: "10.0.36.0/24",
        name: cdktf.Token.asString(googleComputeNetworkNetwork1.name),
        network: cdktf.Token.asString(googleComputeNetworkNetwork1.name),
        privateIpGoogleAccess: true,
        provider: googleBeta,
        region: "us-central1",
        secondaryIpRange: [
          {
            ipCidrRange: "10.0.0.0/19",
            rangeName: "pod",
          },
          {
            ipCidrRange: "10.0.32.0/22",
            rangeName: "svc",
          },
        ],
      });
    const googleContainerClusterCluster1 =
      new google.containerCluster.ContainerCluster(this, "cluster-1", {
        defaultSnatStatus: {
          disabled: true,
        },
        initialNodeCount: 1,
        ipAllocationPolicy: {
          clusterSecondaryRangeName: cdktf.Token.asString(
            cdktf.propertyAccess(
              googleComputeSubnetworkSubnetwork1.secondaryIpRange,
              ["0", "range_name"]
            )
          ),
          servicesSecondaryRangeName: cdktf.Token.asString(
            cdktf.propertyAccess(
              googleComputeSubnetworkSubnetwork1.secondaryIpRange,
              ["1", "range_name"]
            )
          ),
        },
        location: "us-central1-c",
        masterAuthorizedNetworksConfig: {},
        name: "cluster-1",
        network: cdktf.Token.asString(googleComputeNetworkNetwork1.name),
        networkingMode: "VPC_NATIVE",
        privateClusterConfig: {
          enablePrivateEndpoint: true,
          enablePrivateNodes: true,
          masterGlobalAccessConfig: {
            enabled: true,
          },
          masterIpv4CidrBlock: "10.42.0.0/28",
        },
        provider: googleBeta,
        subnetwork: cdktf.Token.asString(
          googleComputeSubnetworkSubnetwork1.name
        ),
      });
    new google.DnsResponsePolicy(this, "example-response-policy", {
      gke_clusters: [
        {
          gke_cluster_name: googleContainerClusterCluster1.id,
        },
      ],
      networks: [
        {
          network_url: googleComputeNetworkNetwork1.id,
        },
        {
          network_url: googleComputeNetworkNetwork2.id,
        },
      ],
      provider: googleBeta,
      response_policy_name: "example-response-policy",
    });
  }
}

```

## Argument Reference

The following arguments are supported:


* `responsePolicyName` -
  (Required)
  The user assigned name for this Response Policy, such as `myresponsepolicy`.


- - -


* `description` -
  (Optional)
  The description of the response policy, such as `My new response policy`.

* `networks` -
  (Optional)
  The list of network names specifying networks to which this policy is applied.
  Structure is [documented below](#nested_networks).

* `gkeClusters` -
  (Optional)
  The list of Google Kubernetes Engine clusters that can see this zone.
  Structure is [documented below](#nested_gke_clusters).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_networks"></a>The `networks` block supports:

* `networkUrl` -
  (Required)
  The fully qualified URL of the VPC network to bind to.
  This should be formatted like
  `https://wwwGoogleapisCom/compute/v1/projects/{project}/global/networks/{network}`

<a name="nested_gke_clusters"></a>The `gkeClusters` block supports:

* `gkeClusterName` -
  (Required)
  The resource name of the cluster to bind this ManagedZone to.
  This should be specified in the format like
  `projects/*/locations/*/clusters/*`

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/responsePolicies/{{responsePolicyName}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ResponsePolicy can be imported using any of these accepted formats:

```
$ terraform import google_dns_response_policy.default projects/{{project}}/responsePolicies/{{response_policy_name}}
$ terraform import google_dns_response_policy.default {{project}}/{{response_policy_name}}
$ terraform import google_dns_response_policy.default {{response_policy_name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-3847bfbe5bacaf58d2ff4cfb95e6d36ccb5da26a0ea370b623d13d58a7cc441d -->