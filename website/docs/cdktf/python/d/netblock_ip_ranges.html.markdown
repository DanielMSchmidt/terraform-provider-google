---
subcategory: "Cloud Platform"
description: |-
  Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
---


<!-- Please do not edit this file, it is generated. -->
# google_netblock_ip_ranges

Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.

## Example Usage - Cloud Ranges

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_google_netblock_ip_ranges_netblock =
        google.data_google_netblock_ip_ranges.DataGoogleNetblockIpRanges(self, "netblock")
        cdktf.TerraformOutput(self, "cidr_blocks",
            value=data_google_netblock_ip_ranges_netblock.cidr_blocks
        )
        cdktf.TerraformOutput(self, "cidr_blocks_ipv4",
            value=data_google_netblock_ip_ranges_netblock.cidr_blocks_ipv4
        )
        cdktf.TerraformOutput(self, "cidr_blocks_ipv6",
            value=data_google_netblock_ip_ranges_netblock.cidr_blocks_ipv6
        )
```

## Example Usage - Allow Health Checks

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        google_compute_network_default =
        google.compute_network.ComputeNetwork(self, "default",
            name="test-network"
        )
        data_google_netblock_ip_ranges_legacy_hcs =
        google.data_google_netblock_ip_ranges.DataGoogleNetblockIpRanges(self, "legacy-hcs",
            range_type="legacy-health-checkers"
        )
        google.compute_firewall.ComputeFirewall(self, "allow-hcs",
            allow=[ComputeFirewallAllow(
                ports=["80"],
                protocol="tcp"
            )
            ],
            name="allow-hcs",
            network=cdktf.Token.as_string(google_compute_network_default.name),
            source_ranges=cdktf.Token.as_list(data_google_netblock_ip_ranges_legacy_hcs.cidr_blocks_ipv4)
        )
```

## Argument Reference

The following arguments are supported:

* `range_type` (Optional) - The type of range for which to provide results.

  Defaults to `cloud-netblocks`. The following `range_type`s are supported:

  * `cloud-netblocks` - Corresponds to the IP addresses used for resources on Google Cloud Platform. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)

  * `google-netblocks` - Corresponds to IP addresses used for Google services. [More details.](https://cloud.google.com/compute/docs/faq#where_can_i_find_product_name_short_ip_ranges)

  * `restricted-googleapis` - Corresponds to the IP addresses used for Private Google Access only for services that support VPC Service Controls API access. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)

  * `private-googleapis` - Corresponds to the IP addresses used for Private Google Access for services that do not support VPC Service Controls. [More details.](https://cloud.google.com/vpc/docs/private-access-options#domain-vips)

  * `dns-forwarders` - Corresponds to the IP addresses used to originate Cloud DNS outbound forwarding. [More details.](https://cloud.google.com/dns/zones/#creating-forwarding-zones)

  * `iap-forwarders` - Corresponds to the IP addresses used for Cloud IAP for TCP forwarding. [More details.](https://cloud.google.com/iap/docs/using-tcp-forwarding)

  * `health-checkers` - Corresponds to the IP addresses used for health checking in Cloud Load Balancing. [More details.](https://cloud.google.com/load-balancing/docs/health-checks)

  * `legacy-health-checkers` - Corresponds to the IP addresses used for legacy style health checkers (used by Network Load Balancing). [ More details.](https://cloud.google.com/load-balancing/docs/health-checks)


## Attributes Reference

* `cidr_blocks` - Retrieve list of all CIDR blocks.

* `cidr_blocks_ipv4` - Retrieve list of the IPv4 CIDR blocks

* `cidr_blocks_ipv6` - Retrieve list of the IPv6 CIDR blocks, if available.

<!-- cache-key: cdktf-0.17.0-pre.15 input-6f204f25a28ccf12625e3655e8d512268218fd59910c479c8a08dceee82e1409 -->