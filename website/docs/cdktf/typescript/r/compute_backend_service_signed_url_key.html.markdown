---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  A key for signing Cloud CDN signed URLs for Backend Services.
---

# google\_compute\_backend\_service\_signed\_url\_key

A key for signing Cloud CDN signed URLs for Backend Services.


To get more information about BackendServiceSignedUrlKey, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices)
* How-to Guides
    * [Using Signed URLs](https://cloud.google.com/cdn/docs/using-signed-urls/)

~> **Warning:** All arguments including the following potentially sensitive
values will be stored in the raw state as plain text: `keyValue`.
[Read more about sensitive data in state](https://www.terraform.io/language/state/sensitive-data).

## Example Usage - Backend Service Signed Url Key


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
import * as random from "./.gen/providers/random";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: random.
    For a more precise conversion please use the --provider flag in convert.*/
    const googleComputeHttpHealthCheckDefault =
      new google.computeHttpHealthCheck.ComputeHttpHealthCheck(
        this,
        "default",
        {
          checkIntervalSec: 1,
          name: "test",
          requestPath: "/",
          timeoutSec: 1,
        }
      );
    const googleComputeInstanceTemplateWebserver =
      new google.computeInstanceTemplate.ComputeInstanceTemplate(
        this,
        "webserver",
        {
          disk: [
            {
              autoDelete: true,
              boot: true,
              sourceImage: "debian-cloud/debian-11",
            },
          ],
          machineType: "e2-medium",
          name: "standard-webserver",
          networkInterface: [
            {
              network: "default",
            },
          ],
        }
      );
    const randomIdUrlSignature = new random.id.Id(this, "url_signature", {
      byte_length: 16,
    });
    const googleComputeInstanceGroupManagerWebservers =
      new google.computeInstanceGroupManager.ComputeInstanceGroupManager(
        this,
        "webservers",
        {
          baseInstanceName: "webserver",
          name: "my-webservers",
          targetSize: 1,
          version: [
            {
              instanceTemplate: cdktf.Token.asString(
                googleComputeInstanceTemplateWebserver.id
              ),
              name: "primary",
            },
          ],
          zone: "us-central1-f",
        }
      );
    const googleComputeBackendServiceExampleBackend =
      new google.computeBackendService.ComputeBackendService(
        this,
        "example_backend",
        {
          backend: [
            {
              group: cdktf.Token.asString(
                googleComputeInstanceGroupManagerWebservers.instanceGroup
              ),
            },
          ],
          description: "Our company website",
          enableCdn: true,
          healthChecks: [
            cdktf.Token.asString(googleComputeHttpHealthCheckDefault.id),
          ],
          name: "my-backend-service",
          portName: "http",
          protocol: "HTTP",
          timeoutSec: 10,
        }
      );
    new google.computeBackendServiceSignedUrlKey.ComputeBackendServiceSignedUrlKey(
      this,
      "backend_key",
      {
        backendService: cdktf.Token.asString(
          googleComputeBackendServiceExampleBackend.name
        ),
        keyValue: cdktf.Token.asString(randomIdUrlSignature.b64Url),
        name: "test-key",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the signed URL key.

* `keyValue` -
  (Required)
  128-bit key value used for signing the URL. The key value must be a
  valid RFC 4648 Section 5 base64url encoded string.
  **Note**: This property is sensitive and will not be displayed in the plan.

* `backendService` -
  (Required)
  The backend service this signed URL key belongs.


- - -


* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/global/backendServices/{{backendService}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import

This resource does not support import.

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-003753d1676e68519130450e32940bf3c62c2d8baa320646245547ecf7a39733 -->