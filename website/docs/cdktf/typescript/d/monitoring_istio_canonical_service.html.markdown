---
subcategory: "Cloud (Stackdriver) Monitoring"
description: |-
  An Monitoring Service resource created automatically by GCP to monitor an
  Istio Canonical service.
---


<!-- Please do not edit this file, it is generated. -->
# google\_monitoring\_istio\_canonical\_service

A Monitoring Service is the root resource under which operational aspects of a
generic service are accessible. A service is some discrete, autonomous, and
network-accessible unit, designed to solve an individual concern

A monitoring Istio Canonical Service is automatically created by GCP to monitor
Istio Canonical Services.


To get more information about Service, see:

* [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services)
* How-to Guides
    * [Service Monitoring](https://cloud.google.com/monitoring/service-monitoring)
    * [Monitoring API Documentation](https://cloud.google.com/monitoring/api/v3/)

## Example Usage - Monitoring Istio Canonical Service


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new google.dataGoogleMonitoringIstioCanonicalService.DataGoogleMonitoringIstioCanonicalService(
      this,
      "default",
      {
        canonicalService: "prometheus",
        canonicalServiceNamespace: "istio-system",
        meshUid: "proj-573164786102",
      }
    );
  }
}

```

## Argument Reference

The arguments of this data source act as filters for identifying a given -created service.

The given filters must match exactly one service whose data will be exported as attributes. The following arguments are supported:

The following fields must be specified:

* `meshUid` - (Required) Identifier for the mesh in which this Istio service is defined.
  Corresponds to the meshUid metric label in Istio metrics.

* `canonicalServiceNamespace` - (Required) The namespace of the canonical service underlying this service.
  Corresponds to the destination_canonical_service_namespace metric label in Istio metrics.

* `canonicalService` - (Required) The name of the canonical service underlying this service.
  Corresponds to the destination_canonical_service_name metric label in label in Istio metrics.
  
- - -

Other optional fields include:

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `name` -
  The full REST resource name for this channel. The syntax is:
  `projects/[projectId]/services/[serviceId]`.

* `displayName` -
  Name used for UI elements listing this (Monitoring) Service.

* `telemetry` -
  Configuration for how to query telemetry on the Service. Structure is documented below.

The `telemetry` block includes:

* `resourceName` -
  (Optional)
  The full name of the resource that defines this service.
  Formatted as described in
  https://cloud.google.com/apis/design/resource_names.

<!-- cache-key: cdktf-0.17.0-pre.15 input-3e6e19a0a3a987c255e912890aec8b31d217ba0433aedcb01e70afebf850d836 -->