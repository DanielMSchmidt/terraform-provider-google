---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Compute Engine"
description: |-
  Represents a Target gRPC Proxy resource.
---

# google\_compute\_target\_grpc\_proxy

Represents a Target gRPC Proxy resource. A target gRPC proxy is a component
of load balancers intended for load balancing gRPC traffic. Global forwarding
rules reference a target gRPC proxy. The Target gRPC Proxy references
a URL map which specifies how traffic routes to gRPC backend services.


To get more information about TargetGrpcProxy, see:

* [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/targetGrpcProxies)
* How-to Guides
    * [Using Target gRPC Proxies](https://cloud.google.com/traffic-director/docs/proxyless-overview)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=target_grpc_proxy_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Target Grpc Proxy Basic


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleComputeHealthCheckDefault =
      new google.computeHealthCheck.ComputeHealthCheck(this, "default", {
        checkIntervalSec: 1,
        grpcHealthCheck: {
          grpcServiceName: "testservice",
          portName: "health-check-port",
          portSpecification: "USE_NAMED_PORT",
        },
        name: "healthcheck",
        timeoutSec: 1,
      });
    const googleComputeBackendServiceHome =
      new google.computeBackendService.ComputeBackendService(this, "home", {
        healthChecks: [
          cdktf.Token.asString(googleComputeHealthCheckDefault.id),
        ],
        loadBalancingScheme: "INTERNAL_SELF_MANAGED",
        name: "backend",
        portName: "grpc",
        protocol: "GRPC",
        timeoutSec: 10,
      });
    const googleComputeUrlMapUrlmap = new google.computeUrlMap.ComputeUrlMap(
      this,
      "urlmap",
      {
        defaultService: cdktf.Token.asString(
          googleComputeBackendServiceHome.id
        ),
        description: "a description",
        hostRule: [
          {
            hosts: ["mysite.com"],
            pathMatcher: "allpaths",
          },
        ],
        name: "urlmap",
        pathMatcher: [
          {
            defaultService: cdktf.Token.asString(
              googleComputeBackendServiceHome.id
            ),
            name: "allpaths",
            routeRules: [
              {
                headerAction: {
                  requestHeadersToAdd: [
                    {
                      headerName: "AddSomethingElse",
                      headerValue: "MyOtherValue",
                      replace: true,
                    },
                  ],
                  requestHeadersToRemove: ["RemoveMe2"],
                  responseHeadersToAdd: [
                    {
                      headerName: "AddMe",
                      headerValue: "MyValue",
                      replace: false,
                    },
                  ],
                  responseHeadersToRemove: ["RemoveMe3"],
                },
                matchRules: [
                  {
                    fullPathMatch: "a full path",
                    headerMatches: [
                      {
                        exactMatch: "match this exactly",
                        headerName: "someheader",
                        invertMatch: true,
                      },
                    ],
                    ignoreCase: true,
                    metadataFilters: [
                      {
                        filterLabels: [
                          {
                            name: "PLANET",
                            value: "MARS",
                          },
                        ],
                        filterMatchCriteria: "MATCH_ANY",
                      },
                    ],
                    queryParameterMatches: [
                      {
                        name: "a query parameter",
                        presentMatch: true,
                      },
                    ],
                  },
                ],
                priority: 1,
                urlRedirect: {
                  hostRedirect: "A host",
                  httpsRedirect: false,
                  pathRedirect: "some/path",
                  redirectResponseCode: "TEMPORARY_REDIRECT",
                  stripQuery: true,
                },
              },
            ],
          },
        ],
        test: [
          {
            host: "hi.com",
            path: "/home",
            service: cdktf.Token.asString(googleComputeBackendServiceHome.id),
          },
        ],
      }
    );
    const googleComputeTargetGrpcProxyDefault =
      new google.computeTargetGrpcProxy.ComputeTargetGrpcProxy(
        this,
        "default_3",
        {
          name: "proxy",
          urlMap: cdktf.Token.asString(googleComputeUrlMapUrlmap.id),
          validateForProxyless: true,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    googleComputeTargetGrpcProxyDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

The following arguments are supported:


* `name` -
  (Required)
  Name of the resource. Provided by the client when the resource
  is created. The name must be 1-63 characters long, and comply
  with RFC1035. Specifically, the name must be 1-63 characters long
  and match the regular expression `[aZ]([AZ09]*[aZ09])?` which
  means the first character must be a lowercase letter, and all
  following characters must be a dash, lowercase letter, or digit,
  except the last character, which cannot be a dash.


- - -


* `description` -
  (Optional)
  An optional description of this resource.

* `urlMap` -
  (Optional)
  URL to the UrlMap resource that defines the mapping from URL to
  the BackendService. The protocol field in the BackendService
  must be set to GRPC.

* `validateForProxyless` -
  (Optional)
  If true, indicates that the BackendServices referenced by
  the urlMap may be accessed by gRPC applications without using
  a sidecar proxy. This will enable configuration checks on urlMap
  and its referenced BackendServices to not allow unsupported features.
  A gRPC application must use "xds:///" scheme in the target URI
  of the service it is connecting to. If false, indicates that the
  BackendServices referenced by the urlMap will be accessed by gRPC
  applications via a sidecar proxy. In this case, a gRPC application
  must not use "xds:///" scheme in the target URI of the service
  it is connecting to

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/global/targetGrpcProxies/{{name}}`

* `creationTimestamp` -
  Creation timestamp in RFC3339 text format.

* `selfLinkWithId` -
  Server-defined URL with id for the resource.

* `fingerprint` -
  Fingerprint of this resource. A hash of the contents stored in
  this object. This field is used in optimistic locking. This field
  will be ignored when inserting a TargetGrpcProxy. An up-to-date
  fingerprint must be provided in order to patch/update the
  TargetGrpcProxy; otherwise, the request will fail with error
  412 conditionNotMet. To see the latest fingerprint, make a get()
  request to retrieve the TargetGrpcProxy. A base64-encoded string.
* `selfLink` - The URI of the created resource.


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


TargetGrpcProxy can be imported using any of these accepted formats:

```
$ terraform import google_compute_target_grpc_proxy.default projects/{{project}}/global/targetGrpcProxies/{{name}}
$ terraform import google_compute_target_grpc_proxy.default {{project}}/{{name}}
$ terraform import google_compute_target_grpc_proxy.default {{name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-ba489f92b84226a3f36806c13a0cca973dd1b9512803843723bff29b71b97056 -->