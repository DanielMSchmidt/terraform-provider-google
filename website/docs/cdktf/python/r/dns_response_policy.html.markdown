---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud DNS"
description: |-
  A Response Policy is a collection of selectors that apply to queries
  made against one or more Virtual Private Cloud networks.
---

# google\_dns\_response\_policy

A Response Policy is a collection of selectors that apply to queries
made against one or more Virtual Private Cloud networks.

~> **Warning:** This resource is in beta, and should be used with the terraform-provider-google-beta provider.
See [Provider Versions](https://terraform.io/docs/providers/google/guides/provider_versions.html) for more details on beta resources.


<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dns_response_policy_basic&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Dns Response Policy Basic


```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        google_compute_network_network1 =
        google.compute_network.ComputeNetwork(self, "network-1",
            auto_create_subnetworks=False,
            name="network-1",
            provider=google_beta
        )
        google_compute_network_network2 =
        google.compute_network.ComputeNetwork(self, "network-2",
            auto_create_subnetworks=False,
            name="network-2",
            provider=google_beta
        )
        google_compute_subnetwork_subnetwork1 =
        google.compute_subnetwork.ComputeSubnetwork(self, "subnetwork-1",
            ip_cidr_range="10.0.36.0/24",
            name=cdktf.Token.as_string(google_compute_network_network1.name),
            network=cdktf.Token.as_string(google_compute_network_network1.name),
            private_ip_google_access=True,
            provider=google_beta,
            region="us-central1",
            secondary_ip_range=[ComputeSubnetworkSecondaryIpRange(
                ip_cidr_range="10.0.0.0/19",
                range_name="pod"
            ), ComputeSubnetworkSecondaryIpRange(
                ip_cidr_range="10.0.32.0/22",
                range_name="svc"
            )
            ]
        )
        google_container_cluster_cluster1 =
        google.container_cluster.ContainerCluster(self, "cluster-1",
            default_snat_status=ContainerClusterDefaultSnatStatus(
                disabled=True
            ),
            initial_node_count=1,
            ip_allocation_policy=ContainerClusterIpAllocationPolicy(
                cluster_secondary_range_name=cdktf.Token.as_string(
                    cdktf.property_access(google_compute_subnetwork_subnetwork1.secondary_ip_range, ["0", "range_name"])),
                services_secondary_range_name=cdktf.Token.as_string(
                    cdktf.property_access(google_compute_subnetwork_subnetwork1.secondary_ip_range, ["1", "range_name"]))
            ),
            location="us-central1-c",
            master_authorized_networks_config=ContainerClusterMasterAuthorizedNetworksConfig(),
            name="cluster-1",
            network=cdktf.Token.as_string(google_compute_network_network1.name),
            networking_mode="VPC_NATIVE",
            private_cluster_config=ContainerClusterPrivateClusterConfig(
                enable_private_endpoint=True,
                enable_private_nodes=True,
                master_global_access_config=ContainerClusterPrivateClusterConfigMasterGlobalAccessConfig(
                    enabled=True
                ),
                master_ipv4_cidr_block="10.42.0.0/28"
            ),
            provider=google_beta,
            subnetwork=cdktf.Token.as_string(google_compute_subnetwork_subnetwork1.name)
        )
        google.DnsResponsePolicy(self, "example-response-policy",
            gke_clusters=[{
                "gke_cluster_name": google_container_cluster_cluster1.id
            }
            ],
            networks=[{
                "network_url": google_compute_network_network1.id
            }, {
                "network_url": google_compute_network_network2.id
            }
            ],
            provider=google_beta,
            response_policy_name="example-response-policy"
        )
```

## Argument Reference

The following arguments are supported:


* `response_policy_name` -
  (Required)
  The user assigned name for this Response Policy, such as `myresponsepolicy`.


- - -


* `description` -
  (Optional)
  The description of the response policy, such as `My new response policy`.

* `networks` -
  (Optional)
  The list of network names specifying networks to which this policy is applied.
  Structure is [documented below](#nested_networks).

* `gke_clusters` -
  (Optional)
  The list of Google Kubernetes Engine clusters that can see this zone.
  Structure is [documented below](#nested_gke_clusters).

* `project` - (Optional) The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.


<a name="nested_networks"></a>The `networks` block supports:

* `network_url` -
  (Required)
  The fully qualified URL of the VPC network to bind to.
  This should be formatted like
  `https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}`

<a name="nested_gke_clusters"></a>The `gke_clusters` block supports:

* `gke_cluster_name` -
  (Required)
  The resource name of the cluster to bind this ManagedZone to.
  This should be specified in the format like
  `projects/*/locations/*/clusters/*`

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `projects/{{project}}/responsePolicies/{{response_policy_name}}`


## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ResponsePolicy can be imported using any of these accepted formats:

```
$ terraform import google_dns_response_policy.default projects/{{project}}/responsePolicies/{{response_policy_name}}
$ terraform import google_dns_response_policy.default {{project}}/{{response_policy_name}}
$ terraform import google_dns_response_policy.default {{response_policy_name}}
```

## User Project Overrides

This resource supports [User Project Overrides](https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override).

<!-- cache-key: cdktf-0.17.0-pre.15 input-3847bfbe5bacaf58d2ff4cfb95e6d36ccb5da26a0ea370b623d13d58a7cc441d -->