---
subcategory: "Compute Engine"
description: |-
  Get the serial port output from a Compute Instance.
---


<!-- Please do not edit this file, it is generated. -->
# google\_compute\_instance\_serial\_port

Get the serial port output from a Compute Instance. For more information see
the official [API](https://cloud.google.com/compute/docs/instances/viewing-serial-port-output) documentation.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataGoogleComputeInstanceSerialPortSerial =
      new google.dataGoogleComputeInstanceSerialPort.DataGoogleComputeInstanceSerialPort(
        this,
        "serial",
        {
          instance: "my-instance",
          port: 1,
          zone: "us-central1-a",
        }
      );
    new cdktf.TerraformOutput(this, "serial_out", {
      value: dataGoogleComputeInstanceSerialPortSerial.contents,
    });
  }
}

```

Using the serial port output to generate a windows password, derived from the [official guide](https://cloud.google.com/compute/docs/instances/windows/automate-pw-generation):

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleComputeInstanceWindows =
      new google.computeInstance.ComputeInstance(this, "windows", {
        bootDisk: {
          initializeParams: {
            image: "windows-cloud/windows-2019",
          },
        },
        machineType: "e2-medium",
        metadata: {
          "serial-port-logging-enable": "TRUE",
          "windows-keys": cdktf.Fn.jsonencode({
            email: "example.user@example.com",
            expireOn: "2020-04-14T01:37:19Z",
            exponent: "AQAB",
            modulus:
              "wgsquN4IBNPqIUnu+h/5Za1kujb2YRhX1vCQVQAkBwnWigcCqOBVfRa5JoZfx6KIvEXjWqa77jPvlsxM4WPqnDIM2qiK36up3SKkYwFjff6F2ni/ry8vrwXCX3sGZ1hbIHlK0O012HpA3ISeEswVZmX2X67naOvJXfY5v0hGPWqCADao+xVxrmxsZD4IWnKl1UaZzI5lhAzr8fw6utHwx1EZ/MSgsEki6tujcZfN+GUDRnmJGQSnPTXmsf7Q4DKreTZk49cuyB3prV91S0x3DYjCUpSXrkVy1Ha5XicGD/q+ystuFsJnrrhbNXJbpSjM6sjo/aduAkZJl4FmOt0R7Q==",
            userName: "example-user",
          }),
        },
        name: "windows-instance",
        networkInterface: [
          {
            accessConfig: [{}],
            network: "default",
          },
        ],
        serviceAccount: {
          scopes: ["userinfo-email", "compute-ro", "storage-ro"],
        },
        zone: "us-central1-a",
      });
    const dataGoogleComputeInstanceSerialPortSerial =
      new google.dataGoogleComputeInstanceSerialPort.DataGoogleComputeInstanceSerialPort(
        this,
        "serial",
        {
          instance: cdktf.Token.asString(googleComputeInstanceWindows.name),
          port: 4,
          zone: cdktf.Token.asString(googleComputeInstanceWindows.zone),
        }
      );
    new cdktf.TerraformOutput(this, "serial_out", {
      value: dataGoogleComputeInstanceSerialPortSerial.contents,
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `instance` - (Required) The name of the Compute Instance to read output from.

* `port` - (Required) The number of the serial port to read output from. Possible values are 1-4.

- - -

* `project` - (Optional) The project in which the Compute Instance exists. If it
    is not provided, the provider project is used.

* `zone` - (Optional) The zone in which the Compute Instance exists.
    If it is not provided, the provider zone is used.

## Attributes Reference

In addition to the arguments listed above, the following computed attributes are
exported:

* `contents` - The output of the serial port. Serial port output is available only when the VM instance is running, and logs are limited to the most recent 1 MB of output per port.

<!-- cache-key: cdktf-0.17.0-pre.15 input-02467317cb032fe36ca01cdac991bc8550682549b84d88654c9306d74bc5c09c -->