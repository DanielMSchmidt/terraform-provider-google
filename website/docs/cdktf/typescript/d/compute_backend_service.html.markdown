---
subcategory: "Compute Engine"
description: |-
  Get information about a Backend Service.
---


<!-- Please do not edit this file, it is generated. -->
# google\_compute\_backend\_service

Provide access to a Backend Service's attribute. For more information
see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/backend-service)
and the [API](https://cloud.google.com/compute/docs/reference/latest/backendServices).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataGoogleComputeBackendServiceBaz =
      new google.dataGoogleComputeBackendService.DataGoogleComputeBackendService(
        this,
        "baz",
        {
          name: "foobar",
        }
      );
    new google.computeBackendService.ComputeBackendService(this, "default", {
      healthChecks: [
        cdktf.Token.asString(
          cdktf.propertyAccess(
            cdktf.Fn.tolist(dataGoogleComputeBackendServiceBaz.healthChecks),
            ["0"]
          )
        ),
      ],
      name: "backend-service",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Backend Service.

- - -

* `project` - (Optional) The project in which the resource belongs. If it is not provided, the provider project is used.

## Attributes Reference

In addition to the arguments listed above, the following attributes are exported:

* `connectionDrainingTimeoutSec` - Time for which instance will be drained (not accept new connections, but still work to finish started ones).

* `description` - Textual description for the Backend Service.

* `enableCdn` - Whether or not Cloud CDN is enabled on the Backend Service.

* `fingerprint` - The fingerprint of the Backend Service.

* `id` - an identifier for the resource with format `projects/{{project}}/global/backendServices/{{name}}`

* `portName` - The name of a service that has been added to an instance group in this backend.

* `protocol` - The protocol for incoming requests.

* `selfLink` - The URI of the Backend Service.

* `sessionAffinity` - The Backend Service session stickiness configuration.

* `timeoutSec` - The number of seconds to wait for a backend to respond to a request before considering the request failed.

* `backend` - The set of backends that serve this Backend Service.

* `healthChecks` - The set of HTTP/HTTPS health checks used by the Backend Service.

* `generatedId` - The unique identifier for the resource. This identifier is defined by the server.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d6dc3bd51c9b0ddfed0a257db7622a3502565f8b8b6671805a233ba67011baf0 -->