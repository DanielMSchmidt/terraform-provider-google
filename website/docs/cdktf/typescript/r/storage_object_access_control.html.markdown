---

<!-- Please do not edit this file, it is generated. -->
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in
#     .github/CONTRIBUTING.md.
#
# ----------------------------------------------------------------------------
subcategory: "Cloud Storage"
description: |-
  The ObjectAccessControls resources represent the Access Control Lists
  (ACLs) for objects within Google Cloud Storage.
---

# google\_storage\_object\_access\_control

The ObjectAccessControls resources represent the Access Control Lists
(ACLs) for objects within Google Cloud Storage. ACLs let you specify
who has access to your data and to what extent.

There are two roles that can be assigned to an entity:

READERs can get an object, though the acl property will not be revealed.
OWNERs are READERs, and they can get the acl property, update an object,
and call all objectAccessControls methods on the object. The owner of an
object is always an OWNER.
For more information, see Access Control, with the caveat that this API
uses READER and OWNER instead of READ and FULL_CONTROL.


To get more information about ObjectAccessControl, see:

* [API documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls)
* How-to Guides
    * [Official Documentation](https://cloud.google.com/storage/docs/access-control/create-manage-lists)

<div class = "oics-button" style="float: right; margin: 0 0 -15px">
  <a href="https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=storage_object_access_control_public_object&cloudshell_image=gcr.io%2Fgraphite-cloud-shell-images%2Fterraform%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md" target="_blank">
    <img alt="Open in Cloud Shell" src="//gstatic.com/cloudssh/images/open-btn.svg" style="max-height: 44px; margin: 32px auto; max-width: 100%;">
  </a>
</div>
## Example Usage - Storage Object Access Control Public Object


```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as google from "./.gen/providers/google";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const googleStorageBucketBucket = new google.storageBucket.StorageBucket(
      this,
      "bucket",
      {
        location: "US",
        name: "static-content-bucket",
      }
    );
    const googleStorageBucketObjectObject =
      new google.storageBucketObject.StorageBucketObject(this, "object", {
        bucket: cdktf.Token.asString(googleStorageBucketBucket.name),
        name: "public-object",
        source: "../static/img/header-logo.png",
      });
    new google.storageObjectAccessControl.StorageObjectAccessControl(
      this,
      "public_rule",
      {
        bucket: cdktf.Token.asString(googleStorageBucketBucket.name),
        entity: "allUsers",
        object: cdktf.Token.asString(
          googleStorageBucketObjectObject.outputName
        ),
        role: "READER",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:


* `bucket` -
  (Required)
  The name of the bucket.

* `entity` -
  (Required)
  The entity holding the permission, in one of the following forms:
    * user-{{userId}}
    * user-{{email}} (such as "user-liz@example.com")
    * group-{{groupId}}
    * group-{{email}} (such as "group-example@googlegroups.com")
    * domain-{{domain}} (such as "domain-example.com")
    * project-team-{{projectId}}
    * allUsers
    * allAuthenticatedUsers

* `object` -
  (Required)
  The name of the object to apply the access control to.

* `role` -
  (Required)
  The access permission for the entity.
  Possible values are: `owner`, `reader`.


- - -



## Attributes Reference

In addition to the arguments listed above, the following computed attributes are exported:

* `id` - an identifier for the resource with format `{{bucket}}/{{object}}/{{entity}}`

* `domain` -
  The domain associated with the entity.

* `email` -
  The email address associated with the entity.

* `entityId` -
  The ID for the entity

* `generation` -
  The content generation of the object, if applied to an object.

* `projectTeam` -
  The project team associated with the entity
  Structure is [documented below](#nested_project_team).


<a name="nested_project_team"></a>The `projectTeam` block contains:

* `projectNumber` -
  (Optional)
  The project team associated with the entity

* `team` -
  (Optional)
  The team.
  Possible values are: `editors`, `owners`, `viewers`.

## Timeouts

This resource provides the following
[Timeouts](https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts) configuration options:

- `create` - Default is 20 minutes.
- `update` - Default is 20 minutes.
- `delete` - Default is 20 minutes.

## Import


ObjectAccessControl can be imported using any of these accepted formats:

```
$ terraform import google_storage_object_access_control.default {{bucket}}/{{object}}/{{entity}}
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-65848f35738142478d8a9c062e530dde213d41e983361b6aa4d1cfee6a19be1a -->