---
subcategory: "Container Registry"
description: |-
  Get URLs for a given project's container registry image.
---


<!-- Please do not edit this file, it is generated. -->
# google\_container\_registry\_image

This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.

The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.google as google
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_google_container_registry_image_debian =
        google.data_google_container_registry_image.DataGoogleContainerRegistryImage(self, "debian",
            name="debian"
        )
        cdktf.TerraformOutput(self, "gcr_location",
            value=data_google_container_registry_image_debian.image_url
        )
```

## Argument Reference
* `name`: (Required) The image name.
* `project`: (Optional) The project ID that this image is attached to.  If not provider, provider project will be used instead.
* `region`: (Optional) The GCR region to use.  As of this writing, one of `asia`, `eu`, and `us`.  See [the documentation](https://cloud.google.com/container-registry/docs/pushing-and-pulling) for additional information.
* `tag`: (Optional) The tag to fetch, if any.
* `digest`: (Optional) The image digest to fetch, if any.

## Attributes Reference
In addition to the arguments listed above, this data source exports:
* `image_url`: The URL at which the image can be accessed.

<!-- cache-key: cdktf-0.17.0-pre.15 input-52f409d78a72e4d690064599f0769a6675e388c8aebd01f9e976ae7ca5ca286b -->